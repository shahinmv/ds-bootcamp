--1
SELECT first_name, last_name, salary, department_id FROM hr.employees  
WHERE salary IN  (SELECT MIN(salary) FROM hr.employees GROUP BY department_id ) and department_id=90;

--2
select department_name, first_name, last_name, salary, DENSE_RANK() OVER (PARTITION BY department_id ORDER BY salary) as rank
from hr.employees emp left join hr.departments using (department_id) where department_id in (30, 40);

--3
SELECT
department_id, last_name, salary,
DENSE_RANK()
OVER (PARTITION BY department_id
ORDER BY salary)
DENSE_RANK FROM hr.employees
WHERE department_id = 50
ORDER BY DENSE_RANK fetch first 3 rows only;

--4
select first_name, last_name, salary, LAG(salary, 1, 0)
OVER (order by hire_date)
from hr.employees where job_id='IT_PROG'

--5
select employee_id, first_name, last_name, department_name from hr.employees left join hr.departments using (department_id) 
where employee_id in (select employee_id from hr.job_history where department_id=60)

--6
create table employees_copy as select * from hr.employees;
update employees_copy set salary=
case department_id
when 90 then (select max(salary) from hr.employees group by department_id having department_id=90)
when 60 then (select max(salary) from hr.employees group by department_id having department_id=60)
when 100 then (select max(salary) from hr.employees group by department_id having department_id=100)
when 30 then (select max(salary) from hr.employees group by department_id having department_id=30)
when 50 then (select max(salary) from hr.employees group by department_id having department_id=50)
when 80 then (select max(salary) from hr.employees group by department_id having department_id=80)
ELSE salary
end;

--7
update employees_copy set salary=salary*1.3;


select * from employees_copy